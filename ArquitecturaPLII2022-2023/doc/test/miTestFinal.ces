/* CONSTANTES */
#constante VERDADERO 1;
#constante FALSO 0;
#constante MAX 10;


/* TIPOS COMPUESTOS */ 
tipo entero vectorGlobal15[15];
tipo entero vectorGlobal10[MAX];


/* VARIABLES */
entero a, b, x;
entero suma;
entero uno = 1, tres = 3, cinco = 5;
vectorGlobal15 vecGlob15;
vectorGlobal10 vecGlob10;


/* FUNCIONES */

entero funSuma (entero y, entero x) {
	
	/*tipos*/
	tipo entero vectorFunSuma[15];
	
	/*variables locales*/
	entero i;
	vectorFunSuma vecFunSum;
	entero suma;
	
	/*sentencias*/
	suma = x + y;
	suma = funSuma(i,vecFunSum[2]);
	
	devuelve suma;	
}

vacio escribeEntero (entero x) {
	
	/*tipos*/
	tipo entero vectorFunSuma[15];
	
	/*variables*/
	entero nueve = 9;
	entero fS;
		
	/*sentencias*/
	fS = funSuma(x,nueve);
	escribeEnt (x);
	escribeEntero(9);
	
	devuelve;
}

vacio saluda () {
	suma = 3;
 	escribe ("Hola mundo");
}

/* Error: 
entero funResta (entero a, entero b){   // debe devolver 
	a = a++;
	devuelve;
}
vacio miFun (entero w) {                // no debe devolver
 	escribe ("Hola mundo");
 	devuelve w;
}
vacio saluda() {                        // ya ha sido declarada  
 	escribe ("Hola mundo");
}
vacio saludaDos (vectorGlobal15 v) {    // no se puede pasar un vector entero de param       
 	escribe ("Hola mundo");
}*/




vacio principal () {
	
	/*TIPOS*/
	tipo entero vectorPrincipal20[20];
	tipo entero vectorFunSuma[15];
	
	/*error: 
	tipo entero vectorGlobal15[15];  // ya declarado
	tipo entero vectorError[a];      // no es constante
	tipo entero vectorError[0];      // tamano es cero
	*/
		
	
	/* DECLARACIONES */
	entero a, b, i;
	entero dia = 1;
	vectorPrincipal20 vec20;
	vectorPrincipal20 vec202;
	
	/*error: 
	entero a;          // ya declarado
	vector miVector;   // no existe el tipo
	*/
	
	
	/* EXPRESIONES Y SENTENCIAS*/
	
	/* precedencias */
	
	escribe("-diez:");
	escribeEnt(2 + 2 + 3 * 2);
	escribe("-doce:");
	escribeEnt(2 + (2 + 3) * 2); 
	escribe("-cero(falso):");
	escribeEnt(1 && 0 && 1 );
	escribe("-uno(cierto):");
	escribeEnt(2 < 3 < 4 );
	escribe("-cero(falso):");
	escribeEnt(2 < (3 < 4) );
	
	/* vectores */
	
	vec20[0] = 1; 
	vec20[1] = 2; 
	vec20[2] = 3;
	vec20[4] = 5;
	vec20[15] = vec20[2];
	escribe("uno:");
	escribeEnt (vec20[0]); 
	escribe("-tres:");
	escribeEnt (vec20[1+1]);
	escribe("-tres:"); 
	escribeEnt (vec20[vec20[1]]); 
	escribe("-cinco:");
	escribeEnt (vec20[1]+vec20[2]); 
	escribe("-dos:");
	escribeEnt (vec20[0++]); 
	escribe("-tres:");
	escribeEnt (vec20[3*5]); 
	
	/* error	
	vec20[20]=2728;  // fuera de limites
	vec20 = vec202;  // asignacion directa no permitida	
	*/
	
	
	/* incrementos */
	
	a = 2*vec20[2];
	a++;
	escribe("-siete:");
	escribeEnt(a); 
	a+=5;
	escribe("-doce:");
	escribeEnt(a); 
	b = a++;
	escribe("-trece:");
	escribeEnt(b); 
	
	/* error	
	MAX ++;
	vec20 ++;
	*/
	
	/* llamadas a funciones */
	
	saluda();
	i =  funSuma(a, i) + 2;
	i += funSuma(4, vec20[0]);
	escribe("-cuatro:");
	escribeEnt(i);	
	
	/* error	
	funSuma(4, vec20[0]);  // devuelve un valor, contexto equivocado
	i = saluda();		   // no devuelve un valor, contexto equivocado
	saluda(3);   		   // parametros incorrectos	
	i = funSuma(vec20, 4); // parametros incorrectos
	i = funSuma();		   // parametros incorrectos	
	*/
	
	
	/* sentencia si */
	
	/* en contexto logico (como sentencia mientras o sentcia si), el 0 es falso y distinto de 0 es verdadero */
	escribe ("----SENTENCIA SI----");
	a = 5;
	b = 5;
	i = 0;
	
	si (i){
		escribe ("rama1");
		si(a<b){
			escribe("rama1.1");
		}sino{
			escribe("rama1.2");
		}
	} sino {
	    escribe ("rama2");
	    si(a == b){
	    	escribe("rama2.1");
	    	si (i==5)
			 escribe ("i es cinco");
			si (i==0){
			 escribe ("i es");
			 escribe ("falso");
			} sino {
			 escribe (" i es verdadero");
			}
	    }sino{
	    	entero ramaVar = 98;
	    	escribe("rama2.2");
	    	si(ramaVar+a){
	    		escribe("rama2.2.1");
	    	}sino{
	    		escribe("rama2.2.2");
	    	}
	    }	    	
	}
	
	/* sentencia alternativas */
	escribe ("----SENTENCIA ALTERNATIVAS----");
	a = 2;
	b = 8;
	
	alternativas (a){
	 caso 1: {escribe("caso uno");} corte;
	 caso 2: {
	 	entero altVar = 2;
		escribe("caso dos");
		escribe("altVar es ");
		escribeEnt(altVar);
	 } corte;
	 caso 4: {
	 	escribe("caso cuatro cuatro");
	 	si(b) escribe("b es distinto a 0");
	 } corte;
	 	pordefecto: {escribe ("porDefecto!");} corte;
	}
	
	alternativas (b){
	 caso 1: {escribe("alternativas 2 caso 1");} corte;
	 caso 4: {
	 	escribe("caso cuatro cuatro");
	 	si(b) escribe("b es distinto a 0");
	 } corte;	 	
	}
	
	/* sentencia mientras */
	escribe ("----SENTENCIA MIENTRAS----");	
	
	a = 2;
	b = 1;
	i = a + b;
	
	mientras (a<7){		
	    a=a+1;
	    escribeEnt(a);
	}
	
	escribe("i es 3:");
	escribeEnt(i);
	mientras (i<10) i++;
	escribe("i es 10:");
	escribeEnt(i);
	
	mientras (a){
		escribe("a es:");
	    escribeEnt(a);
	    a = 0;
	}
	escribe("a es 0:");
	escribeEnt(a);

devuelve;

}